# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# topo.py
# Created on: 2024-02-29 09:03:14.00000
#   (generated by ArcGIS/ModelBuilder)
# Description: 
# ---------------------------------------------------------------------------

# Set the necessary product code
import arceditor


# Import arcpy module
import arcpy
import os
import Tkinter as tk
from tkinter import messagebox
import tkFileDialog as filedialog
from tkFileDialog import askopenfilename

root = tk.Tk()
root.withdraw()
messagebox.showinfo("showinfo","Please input your DTM Raster")
raster_proc = filedialog.askopenfilename()
messagebox.showinfo("showinfo","Please insert folder to store result")
gdb_location = filedialog.askdirectory()

root.destroy

list_directory = ["last_result_topo","geodatabase_topo"]

last_result = os.path.join(gdb_location,list_directory[0])
geodatabase_loc = os.path.join(gdb_location,list_directory[1])

os.makedirs(last_result)
os.makedirs(geodatabase_loc)

# Process: Create File GDB
outputgdb = "topo.gdb"
arcpy.CreateFileGDB_management(geodatabase_loc, outputgdb, "CURRENT")
geodatabase_acc_dir = os.path.join(geodatabase_loc,outputgdb)

# Local variables:
acc_dir_gdb = gdb_location
arcpy.CheckOutExtension("Spatial")

HillSha_tif2 = os.path.join(geodatabase_acc_dir,"HillSha_tif")
slope = os.path.join(geodatabase_acc_dir,"Slope")
Reclass_a1 = os.path.join(geodatabase_acc_dir,"Reclass_slope")
RasterT_Reclass1__2_ = os.path.join(last_result,"Slope")
Contour_tif1 = os.path.join(geodatabase_acc_dir,"Contour")
Contour_tif1_SmoothLine = os.path.join(last_result,"contour_smooth_line")

Parallel_Processing_Factor = "0"
Parallel_Processing_Factor__2_ = "0"
Parallel_Processing_Factor__3_ = "0"


# Process: Hillshade
tempEnvironment0 = arcpy.env.parallelProcessingFactor
arcpy.env.parallelProcessingFactor = Parallel_Processing_Factor__3_ 
arcpy.gp.HillShade_sa(raster_proc, HillSha_tif2, "315", "45", "NO_SHADOWS", "1")

# Process: Slope
tempEnvironment0 = arcpy.env.parallelProcessingFactor
arcpy.env.parallelProcessingFactor = Parallel_Processing_Factor
arcpy.gp.Slope_sa(raster_proc, slope, "DEGREE", "1", "PLANAR", "METER")
arcpy.env.parallelProcessingFactor = tempEnvironment0

# Process: Reclassify (2)
reclass_string = "0 2 1;2 6 2;6 12 3;12 20 4;20 25 5;25 " + str(arcpy.GetRasterProperties_management(slope, "MAXIMUM")) + " 6"
arcpy.gp.Reclassify_sa(slope, "Value", reclass_string, Reclass_a1, "DATA")

# Process: Raster to Polygon (2)
arcpy.RasterToPolygon_conversion(Reclass_a1, RasterT_Reclass1__2_, "SIMPLIFY", "VALUE", "SINGLE_OUTER_PART", "")

# Process: Contour
tempEnvironment0 = arcpy.env.parallelProcessingFactor
arcpy.env.parallelProcessingFactor = Parallel_Processing_Factor__2_ 
arcpy.gp.Contour_sa(raster_proc, Contour_tif1, "1", "0", "1", "CONTOUR", "")
arcpy.env.parallelProcessingFactor = tempEnvironment0

# Process: Smooth Line
arcpy.SmoothLine_cartography(Contour_tif1, Contour_tif1_SmoothLine, "PAEK", "3 Meters", "FIXED_CLOSED_ENDPOINT", "NO_CHECK", "")

